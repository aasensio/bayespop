;------------------------------------------------------------------------------
; Loading all the required modules
;------------------------------------------------------------------------------
@load_conffile.pro
@load_data.pro
@load_library.pro
@create_mask.pro
@adapt_library.pro
@load_priors.pro
@get_preproc_name.pro
;------------------------------------------------------------------------------
PRO PREPARE_SED_FITTING, configuration_file

configuration_file = '../config_files/galaxies.conf'

;## Loading the datafile
print, '# Reading the configuration file: '+configuration_file
conffile = load_conffile(configuration_file)
print, '- '+strcompress(string(conffile.nfiles),/re)+' cases found'
print, ''

;## Looping on every case of the datafile ---------------
FOR i=0, conffile.nfiles-1 DO BEGIN

    ;## Loading contents of each case in the conffile into a structure
    ; NOTE: the data will be put in restframe using the redshift info and log-rebinned
    len = strlen(conffile.filename[i])
    print, strjoin(replicate('=',len+4))
    print, '  '+conffile.filename[i]
    print, strjoin(replicate('=',len+4))
    galaxy = load_data(conffile,i)

   ;## Creating the mask (1 for the good pixels and 0 for the ones to mask for the fitting)
   print, '# Creating the mask to use on the data: '+galaxy.maskfile
   mask = create_mask(galaxy)

   ;## Reading the libfile and loading contents to a structure
   print, '# Loading library file: '+galaxy.libfile
   library  = load_library(galaxy)

   ;## Adapting the library models to the data
   print, '# Adapting library to match data'
   models  = adapt_library(library, galaxy, mask)

   ;## Reading the priors conffile
   print, '# Loading the priors file: '+galaxy.priorfile
   priors = load_priors(galaxy)

   ;## Defining the name of the preproc file for this case
   ;NOTE: We strip whatever is after the last '.'
   print, '# Defining output name for prepoc_data:'
   outfile = get_preproc_name(galaxy)

   ;## Writing preprocessed data into a binary file
   IF NOT FILE_TEST('../preproc_data',/DIRECTORY) THEN FILE_MKDIR, '../preproc_data'
   OPENW, unit, outfile, /F77_UNFORMATTED, /GET_LUN
   root = string(replicate(32B,100))
   strput, root, "Results/test"
   WRITEU, unit, root

      ; Prior's related parameters
      FOR j=0, 2 DO BEGIN
          CASE priors.type[j] OF
            'UNIFORM': BEGIN
                         WRITEU, unit, 0L 
                         WRITEU, unit, 1.d0*priors.min_val[j], 1.d0*priors.max_val[j]  ; lower and upper bound for parameter (scalar [double])
                         case(j) of
										0: WRITEU, unit, 0.1d0                         ; initial guess for the uniform distributionr (scalar [double])
										1: WRITEU, unit, 1.d0*galaxy.redshift                      ; initial guess for the uniform distributionr (scalar [double])
										2: WRITEU, unit, 165.d0                         ; initial guess for the uniform distributionr (scalar [double])
									endcase
                       END 
            'NORMAL':  BEGIN
                         WRITEU, unit, 1L 
                         WRITEU, unit, 1.d0*priors.min_val[j], 1.d0*priors.max_val[j]  ; lower and upper bound for parameter (scalar [double])
                         WRITEU, unit, 1.d0*priors.mean_val[j], 1.d0*priors.sig_val[j] ; mean and sigma of normal distribution (scalar [double])
                       END                        
            ELSE: message,'ERROR: prior for Weights not UNIFORM or NORMAL'
          ENDCASE
      
      
      ENDFOR

      ; Model's related parameters
      WRITEU, unit, 1L*models.nspec
      WRITEU, unit, 1L*models.npix
      WRITEU, unit, 1.d0*models.velscale
      WRITEU, unit, 1.d0*models.spec

      ; Data's related parameters
      WRITEU, unit, 1.d0*galaxy.snr
      WRITEU, unit, 1L*galaxy.nspec
      WRITEU, unit, 1.d0*galaxy.spec
      WRITEU, unit, 1L*mask
      WRITEU, unit, 1L*galaxy.fix_losvd
     
   CLOSE, unit
   FREE_LUN, unit
   print, '# Preprocessed file '+outfile+' written on disk'
   print, ' '

   print, '# Saving basic structures in a SAV file for plotting with IDL routines'
   save, galaxy, models, mask, library, FILENAME='../preproc_data/'+FILE_BASENAME(outfile,'.input')+'.sav'
   
   
ENDFOR

END